[{"content":"日拱一卒，功不唐捐。\n","date":"19 October 2023","permalink":"/posts/","section":"","summary":"日拱一卒，功不唐捐。","title":""},{"content":"","date":"19 October 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"19 October 2023","permalink":"/tags/github/","section":"Tags","summary":"","title":"Github"},{"content":"仅仅是在Github Pages部署博客就有好几种方式，分别为：\n本地打包 Github Actions打包 以及\n部署到同一仓库 部署到不同仓库 这里我主要记录一下我用的本地打包并部署到同一仓库的方法。\n本地打包 + 部署到同一仓库 # 为什么要本地打包 # 说来话长，我使用的Hugo主题使用Github Actions打包总是会报错，但是本地打包又没有问题，网络上也没有搜到报错的解决方案。尝试几天解决无果后，遂退而求其次选择本地打包。\n打包和部署 # 首先在config.toml中把添加如下一行把build的分支从/public改到/docs。\npublishDir = \u0026#34;docs\u0026#34; 然后在项目根目录打开终端输入\nhugo 完成打包。打包完成后可以看到多了一个/docs文件夹（注意不要把这个文件夹加入.gitignore中）。接下来需要同时把打包后的结果push到远程分支（Github分支任意命名即可，不用遵守xxx.github.io的规则）。\n推送完成后进入Github对应分支的设置界面，点击Pages界面，把第三点设置为图上对应格式。如果有域名的话，在第四点那个填上对应域名。（域名这块我也是看的别人的博客，感兴趣的话网上很多教程）\n如果前面的设置都没有问题的话，接下来在Github的导航栏上点击Action，就能看到All workflows列表下有一个正在运行的workflows, 这是Github Actions自带的pages build and deployment workflow，也是为什么你把静态网页推动到Github仓库后就能访问到个人网站的原因。Github Actions提供了一个完整的CI/CD流程，如果对Github Actions想有更深入的了解的话，可以去参考官网文档。但对于只想搭建个人博客的同学来说，这已经足够应对了。\n访问 # 如果你之前没有填写自定义域名，那么你的博客地址是：\u0026lt;github user name\u0026gt;.github.io/\u0026lt;repository name\u0026gt;。比如如果你的Github用户名是abc,你这个仓库的名字是blog，那么你的访问地址就是：abc.github.io/blog。\n如果你之前填写了自定义域名，那么访问地址就是自定义域名。\nGithub Actions打包 + 部署到同一仓库 # Github Actions打包 # 这个方法主要区别是要写一个配置文件，但幸运的是，早已经有人写好了，我们直接复制别人写好的配置即可。配置在仓库目录 .github/workflows 下，以 .yml 为后缀即可，比如.github/workflows/blog-deploy.yml。\nname: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \u0026#34;0 0 * * *\u0026#34; jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: pseudoyu/pseudoyu.github.io PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 上面的配置文件还设置了定时任务，如果不要可以删除这段：\nworkflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \u0026#34;0 0 * * *\u0026#34; 如果想了解细节，参考：\nhttps://github.com/actions/checkout https://github.com/peaceiris/actions-hugo https://github.com/peaceiris/actions-gh-pages 部署 # 部署和上面的类似，只是分支从main变成了gh-pages分支，所以设置那里上图第三点需要把分支设置为gh-pages分支，目录设置为根目录。这样每次本地更新完内容后就直接推送到远程分支，等待Github Action完成打包和部署即可。\n","date":"19 October 2023","permalink":"/posts/blog_deploy/","section":"","summary":"仅仅是在Github Pages部署博客就有好几种方式，分别为：","title":"Hugo博客部署"},{"content":"","date":"19 October 2023","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"19 October 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"19 October 2023","permalink":"/tags/%E5%8D%9A%E5%AE%A2/","section":"Tags","summary":"","title":"博客"},{"content":"","date":"19 October 2023","permalink":"/series/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E5%8F%91%E5%B8%83%E5%85%A8%E6%B5%81%E7%A8%8B/","section":"Series","summary":"","title":"博客搭建到发布全流程"},{"content":"","date":"19 October 2023","permalink":"/categories/%E6%8A%98%E8%85%BE/","section":"Categories","summary":"","title":"折腾"},{"content":"","date":"19 October 2023","permalink":"/tags/%E9%83%A8%E7%BD%B2/","section":"Tags","summary":"","title":"部署"},{"content":"","date":"17 October 2023","permalink":"/","section":"你好，世界","summary":"","title":"你好，世界"},{"content":"","date":"14 October 2023","permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":" 前言 # 还记得第一次搭建博客是在大二，当时一个人带着电脑到教室学习算法，但是遇到苦难习惯性地开始不务正业，去折腾一些更简单的东西来寻求心理安慰。兜兜转转几年过去了，前前后后折腾了不少东西，但是技术也没有精进多少。现在想来，没有去挑战困难是大学最后悔的一件事。另外一件遗憾的事是很少记录生活，一些当初很感动的事情，现在也越来越模糊了。\n这也是我这次重新搭建博客的初衷，记录下自己的脚步，希望未来读档的时候不至于指针越界。\n静态博客主流方案 # 工具 Jekyll Hexo ｜ Hugo 介绍 Jekyll 是一个静态网站生成器，基于Ruby语言。 快速、简洁且高效的博客框架。 Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。 优点 GitHub 支持好，历史最长，文档完备。 国人开发，入门简单。 基于Golang，生成速度快，社区活跃。 缺点 基于Ruby，在三种生成器中速度最慢。需要一定Ruby基础。 基于Node.js，生成速度一般。 入门简单，深入需要阅读英文文档。 曾经在V2EX看到过一个帖子说：\n一个是一群搞前端的人做的，一个是一群搞后端的人做的，特色都十分鲜明。\n深度体验下来，我觉得说的很有道理。\nHugo 安装 # Hugo官方文档地址： Quick start。安装照着教程来就可以了。\n如果使用Homebrew安装只需要：\nbrew install hugo 即可完成。\n安装完成后输入:\nhugo version 来确认是否安装完成。\n新建Hugo网站 # hugo new site site_name cd site_name git init 然后选择使用git submodule的方式来安装主题（还可以用go module的方式，不过我更喜欢git submodule）。\n设置主题 # 接下来去 Hugo主题网站挑选自己喜欢的主题。个人比较喜欢简洁现代风一点的：\nblowfish mini doIt 这里我选择的是 blowfish。\ngit submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish 接下来就是主题相关的配置了，你可以像我一样在终端的博客根目录输入code .进入VS Code进行配置。需要参考 blowfish官方文档(英文文档，需要适应一下)。\n根据文档内容，首先把现在根目录的config.toml文件删除，然后拷贝themes/blowfish/config/_default/目录下的所有toml后缀的文件到博客根目录下的config/_default/目录中。\n然后你就能启动项目看见主题的效果了：\nhugo server 通过 http://localhost:1313 访问。\n添加文章 # 首先先不考虑目录结构和文章分类等问题，跟着敲一遍下列命令新建第一篇文章：\nhugo new content posts/my-first-post.md Hugo会在content/posts目录下新建my-first-post.md文件，你可以随便写入些内容，符合markdown格式即可。比如:\n+++ title = \u0026#39;需要写点什么东西\u0026#39; date = 2023-10-14T11:56:21+08:00 draft = true +++ 不仅需要输入，更需要输出。做一个生产者。 然后在终端输入:\n# -D 意味着生成的内容包括草稿,如上所示，元数据里我加了一行draft = true，表明这个文件是一个草稿，如果不加-D参数的话不会被生成。 hugo server -D 命令重新生成并启动自带的服务器。通过 http://localhost:1313 访问查看效果。\n打包 # 命令很简单：\nhugo 打包的资源放在/public目录下。\n接下来 # 好了，这就是Hugo搭建博客的主要过程，但是如果要想写的得心应手，其实还需要阅读一下Hugo关于内容管理和模板等部分的文档。\n如果想要发布到网络上，还需要自己购买服务器，申请备案等等。不过GitHub Pages给我们提供了另一种选择，你可以不需要服务器，不需要购买域名，甚至不需要多少额外的配置就可以把博客发布到互联网上。\n欢迎阅读这个系列的下一章节。\n","date":"14 October 2023","permalink":"/posts/hugo_blog_build_up/","section":"","summary":"前言 # 还记得第一次搭建博客是在大二，当时一个人带着电脑到教室学习算法，但是遇到苦难习惯性地开始不务正业，去折腾一些更简单的东西来寻求心理安慰。兜兜转转几年过去了，前前后后折腾了不少东西，但是技术也没有精进多少。现在想来，没有去挑战困难是大学最后悔的一件事。另外一件遗憾的事是很少记录生活，一些当初很感动的事情，现在也越来越模糊了。","title":"Hugo博客搭建"},{"content":"记录是为了更好地生活。\n","date":"14 October 2023","permalink":"/diary/","section":"","summary":"记录是为了更好地生活。","title":""},{"content":"","date":"14 October 2023","permalink":"/tags/%E6%97%A5%E8%AE%B0/","section":"Tags","summary":"","title":"日记"},{"content":"","date":"14 October 2023","permalink":"/categories/%E7%8E%B2%E7%8F%91%E9%9B%95%E5%BF%83/","section":"Categories","summary":"","title":"玲珑雕心"},{"content":"羡慕那些能表达出文字的力量的人，寥寥数语，就能让我感受到内心的宁静，或者唤醒沉睡的另一个自己。\n","date":"14 October 2023","permalink":"/diary/2023-10-14-first-diary/","section":"","summary":"羡慕那些能表达出文字的力量的人，寥寥数语，就能让我感受到内心的宁静，或者唤醒沉睡的另一个自己。","title":"需要写点什么东西的冲动"},{"content":" Hi there,\nMy name is Terry, 22 years old. Here is my personal blog site where I will record my daily life and programming experience.\nHopefully, we can all find something from here.\nBest wishes,\nTerry\n","date":"7 October 2023","permalink":"/about/","section":"你好，世界","summary":"Hi there,","title":"About"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"}]